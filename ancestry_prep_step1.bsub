#!/bin/bash
#BSUB -J ancestry_pca[1-8]
#BSUB -o log/ancestry_pca.%J.%I.out
#BSUB -e log/ancestry_pca.%J.%I.err
#BSUB -n 4
#BSUB -M 16GB
#BSUB -R "rusage[mem=16GB]"
#BSUB -W 01:00

module load plink/2.0
module load plink/1.9-20210416

# PCA AND REGENIE FILE PREPARATION FOR STRATIFIED ANCESTRY ANALYSIS

# Set base directories
BASE_DIR="/project/knathans_tecac/jenny/breast"
ANCESTRY_BASE_DIR="${BASE_DIR}/ancestry"

# Define ancestry groups in order
ancestry_groups=("AFR" "MEN" "EUR" "SAS" "EAS" "AMR" "OCN" "MIX")

# Get the specific ancestry group for this array index
ancestry_group="${ancestry_groups[$((LSB_JOBINDEX-1))]}"
ANCESTRY_DIR="${BASE_DIR}/${ancestry_group}"
QC_DIR="${ANCESTRY_DIR}/common_snps"

echo "========================================="
echo "Array job $LSB_JOBINDEX processing: $ancestry_group"
echo "Working directory: $QC_DIR"
echo "========================================="

# Check if QC files exist
QC_FILE="${QC_DIR}/${ancestry_group}_qc"
if [[ ! -f "${QC_FILE}.bed" ]]; then
    echo "ERROR: QC files not found: ${QC_FILE}.{bed,bim,fam}"
    echo "Please run QC script first"
    exit 1
fi

# Create PCA subdirectory
PCA_DIR="${QC_DIR}/pca"
mkdir -p "$PCA_DIR"

# Change to PCA directory for all operations
cd "$PCA_DIR"

# Create summary log file
LOG_FILE="${PCA_DIR}/${ancestry_group}_pca_summary.txt"
echo "=== PCA AND REGENIE PREP FOR $ancestry_group ANCESTRY ===" > "$LOG_FILE"
echo "Started: $(date)" >> "$LOG_FILE"
echo "Input file: ${QC_FILE}" >> "$LOG_FILE"
echo "" >> "$LOG_FILE"

# Get sample counts
total_samples=$(wc -l < "${QC_FILE}.fam")
total_snps=$(wc -l < "${QC_FILE}.bim")
echo "Input data: $total_snps SNPs, $total_samples samples"
echo "Input data: $total_snps SNPs, $total_samples samples" >> "$LOG_FILE"
echo "" >> "$LOG_FILE"

### Step 1: LD pruning for PCA ###
echo "Step 1: LD pruning for PCA..."
echo "Step 1: LD pruning for PCA" >> "$LOG_FILE"

plink --bfile "${QC_FILE}" \
      --indep-pairwise 50 5 0.2 \
      --out "${ancestry_group}_ld_pruning"

if [[ $? -ne 0 ]]; then
    echo "ERROR: LD pruning failed for $ancestry_group"
    exit 1
fi

# Count pruned SNPs
pruned_snps=$(wc -l < "${ancestry_group}_ld_pruning.prune.in")
echo "  LD pruned SNPs for PCA: $pruned_snps"
echo "  LD pruned SNPs for PCA: $pruned_snps" >> "$LOG_FILE"
echo "" >> "$LOG_FILE"

### Step 2: Run PCA ###
echo "Step 2: Running PCA (10 components)..."
echo "Step 2: Running PCA (10 components)" >> "$LOG_FILE"

plink --bfile "${QC_FILE}" \
      --extract "${ancestry_group}_ld_pruning.prune.in" \
      --pca 10 \
      --out "${ancestry_group}_pca"

if [[ $? -ne 0 ]]; then
    echo "ERROR: PCA failed for $ancestry_group"
    exit 1
fi

echo "  PCA completed successfully"
echo "  PCA completed successfully" >> "$LOG_FILE"
echo "" >> "$LOG_FILE"

### Step 3: Create REGENIE covariate file ###
echo "Step 3: Creating REGENIE covariate file..."
echo "Step 3: Creating REGENIE covariate file" >> "$LOG_FILE"

# Convert PCA output to REGENIE covariate format
# PLINK .eigenvec format: FID IID PC1 PC2 ... PC10
# REGENIE format: FID IID V1 V2 ... V10

echo "FID IID V1 V2 V3 V4 V5 V6 V7 V8 V9 V10" > "${ancestry_group}_covariates.txt"
awk '{print $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12}' "${ancestry_group}_pca.eigenvec" >> "${ancestry_group}_covariates.txt"

# Count samples in covariate file
cov_samples=$(tail -n +2 "${ancestry_group}_covariates.txt" | wc -l)
echo "  Covariate file created: $cov_samples samples"
echo "  Covariate file created: $cov_samples samples" >> "$LOG_FILE"
echo "" >> "$LOG_FILE"

### Step 4: Create REGENIE phenotype file ###
echo "Step 4: Creating REGENIE phenotype file..."
echo "Step 4: Creating REGENIE phenotype file" >> "$LOG_FILE"

# Need to get case-control status
CASE_CONTROL_FILE="${BASE_DIR}/case_control.txt"

if [[ -f "$CASE_CONTROL_FILE" ]]; then
    echo "  Using case-control file: $CASE_CONTROL_FILE"
    echo "  Using case-control file: $CASE_CONTROL_FILE" >> "$LOG_FILE"
    
    # Create phenotype file header
    echo "FID IID BREAST_CANCER" > "${ancestry_group}_phenotypes.txt"
    
    # Join sample list with case-control status
    # .fam format: FID IID PAT MAT SEX PHENO
    # Need to create: FID IID BREAST_CANCER (0=control, 1=case)
    
    awk 'BEGIN {OFS=" "}
        # Read case-control status
        NR==FNR && NR>1 {
            if ($2 == "Case") {
                status[$1] = 1
            } else if ($2 == "Control") {
                status[$1] = 0
            } else {
                status[$1] = "NA"
            }
            next
        }
        # Process .fam file
        NR>FNR {
            fid = $1
            iid = $2
            if (iid in status) {
                print fid, iid, status[iid]
            } else {
                print fid, iid, "NA"
            }
        }
    ' "$CASE_CONTROL_FILE" "${QC_FILE}.fam" >> "${ancestry_group}_phenotypes.txt"
    
    # Count phenotyped samples
    pheno_samples=$(tail -n +2 "${ancestry_group}_phenotypes.txt" | wc -l)
    cases_count=$(awk 'NR>1 && $3==1' "${ancestry_group}_phenotypes.txt" | wc -l)
    controls_count=$(awk 'NR>1 && $3==0' "${ancestry_group}_phenotypes.txt" | wc -l)
    missing_count=$(awk 'NR>1 && $3=="NA"' "${ancestry_group}_phenotypes.txt" | wc -l)
    
    echo "  Phenotype file created: $pheno_samples samples"
    echo "    Cases: $cases_count"
    echo "    Controls: $controls_count"
    echo "    Missing: $missing_count"
    
    echo "  Phenotype file created: $pheno_samples samples" >> "$LOG_FILE"
    echo "    Cases: $cases_count" >> "$LOG_FILE"
    echo "    Controls: $controls_count" >> "$LOG_FILE"
    echo "    Missing: $missing_count" >> "$LOG_FILE"
    
else
    echo "  WARNING: Case-control file not found: $CASE_CONTROL_FILE"
    echo "  Creating phenotype file with missing values"
    echo "  WARNING: Case-control file not found" >> "$LOG_FILE"
    
    # Create phenotype file with all missing values
    echo "FID IID BREAST_CANCER" > "${ancestry_group}_phenotypes.txt"
    awk '{print $1, $2, "NA"}' "${QC_FILE}.fam" >> "${ancestry_group}_phenotypes.txt"
    
    pheno_samples=$(tail -n +2 "${ancestry_group}_phenotypes.txt" | wc -l)
    echo "  Phenotype file created: $pheno_samples samples (all missing)"
    echo "  Phenotype file created: $pheno_samples samples (all missing)" >> "$LOG_FILE"
fi

echo "" >> "$LOG_FILE"

### Step 5: Create sample list for REGENIE ###
echo "Step 5: Creating sample list for REGENIE..."
echo "Step 5: Creating sample list for REGENIE" >> "$LOG_FILE"

# Create sample list (FID IID format for REGENIE --keep)
awk '{print $1, $2}' "${QC_FILE}.fam" > "${ancestry_group}_samples.txt"

sample_list_count=$(wc -l < "${ancestry_group}_samples.txt")
echo "  Sample list created: $sample_list_count samples"
echo "  Sample list created: $sample_list_count samples" >> "$LOG_FILE"
echo "" >> "$LOG_FILE"

### Summary ###
echo "========================================="
echo "PCA AND REGENIE PREP COMPLETE for $ancestry_group"
echo "========================================="
echo "Input dataset:        $total_snps SNPs, $total_samples samples"
echo "LD pruned SNPs:       $pruned_snps SNPs"
echo "PCA components:       10 PCs"
echo "Covariate samples:    $cov_samples"
echo "Phenotype samples:    $pheno_samples"
echo "  Cases:              $cases_count"
echo "  Controls:           $controls_count"
echo "  Missing:            $missing_count"
echo "========================================="

# Write final summary to log
echo "=== FINAL SUMMARY ===" >> "$LOG_FILE"
echo "Input dataset:        $total_snps SNPs, $total_samples samples" >> "$LOG_FILE"
echo "LD pruned SNPs:       $pruned_snps SNPs" >> "$LOG_FILE"
echo "PCA components:       10 PCs" >> "$LOG_FILE"
echo "Covariate samples:    $cov_samples" >> "$LOG_FILE"
echo "Phenotype samples:    $pheno_samples" >> "$LOG_FILE"
echo "  Cases:              $cases_count" >> "$LOG_FILE"
echo "  Controls:           $controls_count" >> "$LOG_FILE"
echo "  Missing:            $missing_count" >> "$LOG_FILE"
echo "Completed: $(date)" >> "$LOG_FILE"

### Output file locations ###
echo ""
echo "REGENIE-ready files created:"
echo "Covariates:    ${PCA_DIR}/${ancestry_group}_covariates.txt"
echo "Phenotypes:    ${PCA_DIR}/${ancestry_group}_phenotypes.txt"
echo "Sample list:   ${PCA_DIR}/${ancestry_group}_samples.txt"
echo "Summary log:   ${PCA_DIR}/${ancestry_group}_pca_summary.txt"
echo ""
echo "Files are ready for REGENIE Step 1!"

echo ""
echo "Example REGENIE Step 1 command:" 
echo "regenie \\"
echo "  --step 1 \\"
echo "  --bed ${QC_FILE} \\"
echo "  --covarFile ${PCA_DIR}/${ancestry_group}_covariates.txt \\"
echo "  --phenoFile ${PCA_DIR}/${ancestry_group}_phenotypes.txt \\"
echo "  --bsize 1000 \\"
echo "  --out ${ancestry_group}_step1"

echo ""
echo "PCA and REGENIE prep complete for $ancestry_group!"
