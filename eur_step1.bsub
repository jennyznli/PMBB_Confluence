#!/bin/bash
#BSUB -J eur_step1
#BSUB -o ../log/eur_step1.%J.%I.out
#BSUB -e ../log/eur_step1.%J.%I.err
#BSUB -n 8
#BSUB -M 32GB
#BSUB -R "rusage[mem=32GB]"
#BSUB -W 04:00

module load regenie/3.4.1

# REGENIE STEP 1 FOR STRATIFIED ANCESTRY ANALYSIS

# Set base directories
BASE_DIR="/project/knathans_tecac/jenny/breast"

# Define ancestry groups in order
# ancestry_groups=("AFR" "MEN" "EUR" "SAS" "EAS" "AMR" "OCN" "MIX")

# Get the specific ancestry group for this array index
# ancestry_group="${ancestry_groups[$((LSB_JOBINDEX-1))]}"
ancestry_group=EUR
ANCESTRY_DIR="${BASE_DIR}/analysis/${ancestry_group}"
QC_DIR="${BASE_DIR}/data/${ancestry_group}/step1"
PCA_DIR="${ANCESTRY_DIR}/pca"
STEP1_DIR="${ANCESTRY_DIR}/step1"

echo "========================================="
echo "REGENIE Step 1 for $ancestry_group ancestry"
echo "========================================="

# Check if required input files exist
QC_FILE="${QC_DIR}/breast_eur_qc_final"
COVAR_FILE="${STEP1_DIR}/${ancestry_group}_covariates.txt"
PHENO_FILE="${STEP1_DIR}/${ancestry_group}_phenotype.txt"
SAMPLE_FILE="${STEP1_DIR}/${ancestry_group}_samples.txt"

echo "Checking input files..."
for file in "${QC_FILE}.bed" "${COVAR_FILE}" "${PHENO_FILE}" "${SAMPLE_FILE}"; do
    if [[ ! -f "$file" ]]; then
        echo "ERROR: Required file not found: $file"
        echo "Please run QC and PCA scripts first"
        exit 1
    fi
done
echo "All input files found âœ“"

# Change to step1 directory for all operations
cd "$STEP1_DIR"

# Create summary log file
LOG_FILE="${STEP1_DIR}/${ancestry_group}_regenie_step1_summary.txt"
echo "=== REGENIE STEP 1 FOR $ancestry_group ANCESTRY ===" > "$LOG_FILE"
echo "Started: $(date)" >> "$LOG_FILE"
echo "Input files:" >> "$LOG_FILE"
echo "  Genotypes: ${QC_FILE}" >> "$LOG_FILE"
echo "  Covariates: ${COVAR_FILE}" >> "$LOG_FILE"
echo "  Phenotypes: ${PHENO_FILE}" >> "$LOG_FILE"
echo "  Samples: ${SAMPLE_FILE}" >> "$LOG_FILE"
echo "" >> "$LOG_FILE"

# Get sample and SNP counts
total_samples=$(wc -l < "${QC_FILE}.fam")
total_snps=$(wc -l < "${QC_FILE}.bim")
sample_count=$(wc -l < "${SAMPLE_FILE}")
covar_samples=$(tail -n +2 "${COVAR_FILE}" | wc -l)
pheno_samples=$(tail -n +2 "${PHENO_FILE}" | wc -l)

echo "Dataset information:"
echo "  Total SNPs: $total_snps"
echo "  Total samples: $total_samples"
echo "  Samples in analysis: $sample_count"
echo "  Covariate samples: $covar_samples"
echo "  Phenotype samples: $pheno_samples"

echo "Dataset information:" >> "$LOG_FILE"
echo "  Total SNPs: $total_snps" >> "$LOG_FILE"
echo "  Total samples: $total_samples" >> "$LOG_FILE"
echo "  Samples in analysis: $sample_count" >> "$LOG_FILE"
echo "  Covariate samples: $covar_samples" >> "$LOG_FILE"
echo "  Phenotype samples: $pheno_samples" >> "$LOG_FILE"
echo "" >> "$LOG_FILE"

# Check phenotype distribution
cases_count=$(awk 'NR>1 && $3==1' "${PHENO_FILE}" | wc -l)
controls_count=$(awk 'NR>1 && $3==0' "${PHENO_FILE}" | wc -l)
missing_count=$(awk 'NR>1 && $3=="NA"' "${PHENO_FILE}" | wc -l)

echo "Phenotype distribution:"
echo "  Cases: $cases_count"
echo "  Controls: $controls_count"
echo "  Missing: $missing_count"

echo "Phenotype distribution:" >> "$LOG_FILE"
echo "  Cases: $cases_count" >> "$LOG_FILE"
echo "  Controls: $controls_count" >> "$LOG_FILE"
echo "  Missing: $missing_count" >> "$LOG_FILE"
echo "" >> "$LOG_FILE"

# Check if we have enough cases and controls
if [[ $cases_count -lt 50 ]] || [[ $controls_count -lt 50 ]]; then
    echo "WARNING: Low case ($cases_count) or control ($controls_count) count for $ancestry_group"
    echo "WARNING: Low case/control count" >> "$LOG_FILE"
    if [[ $cases_count -lt 10 ]] || [[ $controls_count -lt 10 ]]; then
        echo "ERROR: Too few cases or controls for meaningful analysis"
        echo "ERROR: Insufficient samples for analysis" >> "$LOG_FILE"
        exit 1
    fi
fi

### Run REGENIE Step 1 ###
echo ""
echo "Running REGENIE Step 1..."
echo "REGENIE Step 1 started: $(date)" >> "$LOG_FILE"

regenie \
  --step 1 \
  --bed "${QC_FILE}" \
  --phenoFile "${PHENO_FILE}" \
  --covarFile "${COVAR_FILE}" \
  --strict \
  --bt \
  --bsize 1000 \
  --threads 8 \
  --out "${ancestry_group}_step1" \
  --loocv

# Check if REGENIE completed successfully
if [[ $? -eq 0 ]]; then
    echo "REGENIE Step 1 completed successfully!"
    echo "REGENIE Step 1 completed successfully: $(date)" >> "$LOG_FILE"
else
    echo "ERROR: REGENIE Step 1 failed for $ancestry_group"
    echo "ERROR: REGENIE Step 1 failed: $(date)" >> "$LOG_FILE"
    echo "Check the REGENIE log files for details"
    exit 1
fi

### Summarize outputs ###
echo ""
echo "REGENIE Step 1 outputs:"
if [[ -f "${ancestry_group}_step1_pred.list" ]]; then
    pred_count=$(wc -l < "${ancestry_group}_step1_pred.list")
    echo "  Prediction files: $pred_count"
    echo "  Prediction files: $pred_count" >> "$LOG_FILE"
fi

# List all output files
echo "  Output files created:"
for file in ${ancestry_group}_step1*; do
    if [[ -f "$file" ]]; then
        size=$(du -h "$file" | cut -f1)
        echo "    $file ($size)"
        echo "    $file ($size)" >> "$LOG_FILE"
    fi
done

### Final Summary ###
echo ""
echo "========================================="
echo "REGENIE STEP 1 COMPLETE for $ancestry_group"
echo "========================================="
echo "Input data:           $total_snps SNPs, $total_samples samples"
echo "Analysis data:        $pruned_snps SNPs, $sample_count samples"
echo "Cases:                $cases_count"
echo "Controls:             $controls_count"
echo "Covariates:           10 PCs (V1-V10)"
echo "Output directory:     $STEP1_DIR"
echo "========================================="

echo ""
echo "REGENIE Step 1 complete for $ancestry_group!"

