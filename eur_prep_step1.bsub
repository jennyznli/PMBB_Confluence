#!/bin/bash
#BSUB -J ancestry_pca
#BSUB -o ../log/ancestry_pca.%J.%I.out
#BSUB -e ../log/ancestry_pca.%J.%I.err
#BSUB -n 4
#BSUB -M 16GB
#BSUB -R "rusage[mem=16GB]"
#BSUB -W 01:00

module load plink/2.0
module load plink/1.9-20210416

# PCA AND REGENIE FILE PREPARATION FOR STRATIFIED ANCESTRY ANALYSIS

# Set base directories
BASE_DIR="/project/knathans_tecac/jenny/breast"
ANCESTRY_BASE_DIR="${BASE_DIR}/analysis/ancestry"
COVAR="/static/PMBB/PMBB-Release-2024-3.0/Phenotypes/3.0/PMBB-Release-2024-3.0_covariates.txt"

# Define ancestry groups in order - not needed now 
# ancestry_groups=("AFR" "MEN" "EUR" "SAS" "EAS" "AMR" "OCN" "MIX")

# Get the specific ancestry group for this array index
# ancestry_group="${ancestry_groups[$((LSB_JOBINDEX-1))]}"
ancestry_group=EUR
ANCESTRY_DIR="${BASE_DIR}/analysis/${ancestry_group}"
QC_DIR="${BASE_DIR}/data/${ancestry_group}/step1"
STEP1_DIR="${BASE_DIR}/analysis/${ancestry_group}/step1"
mkdir -p $STEP1_DIR 

echo "========================================="
echo "Working directory: $QC_DIR"
echo "========================================="

# Check if QC files exist
QC_FILE="${QC_DIR}/breast_eur_qc_final"
if [[ ! -f "${QC_FILE}.bed" ]]; then
    echo "ERROR: QC files not found: ${QC_FILE}.{bed,bim,fam}"
    echo "Please run QC script first"
    exit 1
fi

# Create PCA subdirectory
PCA_DIR="${ANCESTRY_DIR}/pca"
mkdir -p "$PCA_DIR"

# Change to PCA directory for all operations
cd "$PCA_DIR"

# Create summary log file
LOG_FILE="${PCA_DIR}/${ancestry_group}_pca_summary.txt"
echo "=== PCA AND REGENIE PREP FOR $ancestry_group ANCESTRY ===" > "$LOG_FILE"
echo "Started: $(date)" >> "$LOG_FILE"
echo "Input file: ${QC_FILE}" >> "$LOG_FILE"
echo "" >> "$LOG_FILE"

# Get sample counts
total_samples=$(wc -l < "${QC_FILE}.fam")
total_snps=$(wc -l < "${QC_FILE}.bim")
echo "Input data: $total_snps SNPs, $total_samples samples"
echo "Input data: $total_snps SNPs, $total_samples samples" >> "$LOG_FILE"
echo "" >> "$LOG_FILE"

### RUN PCA ###
echo "Step 2: Running PCA (10 components)..."
echo "Step 2: Running PCA (10 components)" >> "$LOG_FILE"

plink --bfile "${QC_FILE}" \
      --pca 10 \
      --out "${ancestry_group}_pca"

if [[ $? -ne 0 ]]; then
    echo "ERROR: PCA failed for $ancestry_group"
    exit 1
fi

echo "  PCA completed successfully"
echo "  PCA completed successfully" >> "$LOG_FILE"
echo "" >> "$LOG_FILE"

### Step 3: Extract phenotype from FAM file ###
echo "Step 3: Extracting phenotype from FAM file" >> "$LOG_FILE"

awk 'BEGIN {OFS=" "}
{
    if (NR == 1) {         # If it's the first row, print the header
        print "FID", "IID", "Y1"
    }
    fid = $1    # Column 1: FID
    iid = $2    # Column 2: IID
    pheno = $6  # Column 6: Phenotype

    # Convert phenotype coding
    if (pheno == 1) {
        converted_pheno = 0    # control: 1 -> 0
    } else if (pheno == 2) {
        converted_pheno = 1    # case: 2 -> 1
    } else if (pheno == -9) {
        converted_pheno = "NA" # missing: -9 -> NA
    } else {
        converted_pheno = "NA" # any other value -> NA
    }

    print fid, iid, converted_pheno
}' "${QC_FILE}.fam" > "${STEP1_DIR}/${ancestry_group}_phenotype.txt"

# Count extracted samples
extracted_samples=$(wc -l < "${STEP1_DIR}/${ancestry_group}_phenotype.txt")
cases_count=$(awk '$3==1' "${STEP1_DIR}/${ancestry_group}_phenotype.txt" | wc -l)
controls_count=$(awk '$3==0' "${STEP1_DIR}/${ancestry_group}_phenotype.txt" | wc -l)
missing_count=$(awk '$3=="NA"' "${STEP1_DIR}/${ancestry_group}_phenotype.txt" | wc -l)

echo "  Phenotype extracted: $extracted_samples samples"
echo "    Cases (1): $cases_count"
echo "    Controls (0): $controls_count" 
echo "    Missing (NA): $missing_count"

echo "  Phenotype extracted: $extracted_samples samples" >> "$LOG_FILE"
echo "    Cases (1): $cases_count" >> "$LOG_FILE"
echo "    Controls (0): $controls_count" >> "$LOG_FILE"
echo "    Missing (NA): $missing_count" >> "$LOG_FILE"
echo "" >> "$LOG_FILE"

### Step 4: Create REGENIE covariate file ###
echo "Step 4: Creating REGENIE covariate file..."
echo "Step 4: Creating REGENIE covariate file" >> "$LOG_FILE"

# Create header with PC names and Batch
echo "FID IID PC1 PC2 PC3 PC4 PC5 PC6 PC7 PC8 PC9 PC10 Batch" > "${STEP1_DIR}/${ancestry_group}_covariates.txt"

# Merge PCA data with batch information
awk '
BEGIN { OFS="\t" }
NR==FNR {
    # Read covariate file (batch info)
    # Skip header if present
    if (NR > 1 && NF >= 2) {
        batch[$1] = $2  # person_id -> batch_number
    }
    next
}
NR > 1 {
    # Process eigenvec file (skip header if present)
    # Print FID, IID, PC1-PC10, and batch
    batch_val = ($2 in batch) ? batch[$2] : "NA"
    print $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, batch_val
}' "$COVAR" "${ancestry_group}_pca.eigenvec" >> "${STEP1_DIR}/${ancestry_group}_covariates.txt"

echo "Created covariate file: ${STEP1_DIR}/${ancestry_group}_covariates.txt"
echo "Columns: FID IID PC1-PC10 Batch"


# Count samples in covariate file
cov_samples=$(tail -n +2 "${STEP1_DIR}/${ancestry_group}_covariates.txt" | wc -l)
echo "  Covariate file created: $cov_samples samples"
echo "  Covariate file created: $cov_samples samples" >> "$LOG_FILE"
echo "" >> "$LOG_FILE"

### Step 5: Create sample list for REGENIE ###
echo "Step 5: Creating sample list for REGENIE..."
echo "Step 5: Creating sample list for REGENIE" >> "$LOG_FILE"

# Create sample list (FID IID format for REGENIE --keep)
awk '{print $1, $2}' "${QC_FILE}.fam" > "${STEP1_DIR}/${ancestry_group}_pids.txt"

sample_list_count=$(wc -l < "${STEP1_DIR}/${ancestry_group}_pids.txt")
echo "  Sample list created: $sample_list_count samples"
echo "  Sample list created: $sample_list_count samples" >> "$LOG_FILE"
echo "" >> "$LOG_FILE"

# Write final summary to log
echo "=== FINAL SUMMARY ===" >> "$LOG_FILE"
echo "Input dataset:        $total_snps SNPs, $total_samples samples" >> "$LOG_FILE"
echo "PCA components:       10 PCs" >> "$LOG_FILE"
echo "Covariate samples:    $cov_samples" >> "$LOG_FILE"
echo "Phenotype samples:    $pheno_samples" >> "$LOG_FILE"
echo "  Cases:              $cases_count" >> "$LOG_FILE"
echo "  Controls:           $controls_count" >> "$LOG_FILE"
echo "  Missing:            $missing_count" >> "$LOG_FILE"
echo "Completed: $(date)" >> "$LOG_FILE"

### Output file locations ###
echo ""
echo "REGENIE-ready files created:"
echo "Covariates:    ${STEP1_DIR}/${ancestry_group}_covariates.txt"
echo "Phenotypes:    ${STEP1_DIR}/${ancestry_group}_phenotypes.txt"
echo "Sample list:   ${STEP1_DIR}/${ancestry_group}_samples.txt"
echo "Summary log:   ${PCA_DIR}/${ancestry_group}_pca_summary.txt"

